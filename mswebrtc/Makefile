# Makefile.in generated by automake 1.11.3 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/mswebrtc
pkgincludedir = $(includedir)/mswebrtc
pkglibdir = $(libdir)/mswebrtc
pkglibexecdir = $(libexecdir)/mswebrtc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = arm-unknown-linux-androideabi
target_triplet = arm-unknown-linux-androideabi

# some files are implementation specific

# floating point implementation
#am__append_1 = $(ISAC_SRC_DIR)/source/initialize.c \
#	$(ISAC_SRC_DIR)/source/crc.c \
#	$(ISAC_SRC_DIR)/source/encode_lpc_swb.c \
#	$(ISAC_SRC_DIR)/source/filter_functions.c \
#	$(ISAC_SRC_DIR)/source/isac.c \
#	$(ISAC_SRC_DIR)/source/lpc_analysis.c \
#	$(ISAC_SRC_DIR)/source/lpc_gain_swb_tables.c \
#	$(ISAC_SRC_DIR)/source/lpc_shape_swb12_tables.c \
#	$(ISAC_SRC_DIR)/source/lpc_shape_swb16_tables.c \
#	$(ISAC_SRC_DIR)/util/utility.c


# fixed point implementation
am__append_2 = $(ISAC_SRC_DIR)/source/decode_plc.c \
	$(ISAC_SRC_DIR)/source/filters.c \
	$(ISAC_SRC_DIR)/source/initialize.c \
	$(ISAC_SRC_DIR)/source/isacfix.c \
	$(ISAC_SRC_DIR)/source/lattice_c.c \
	$(ISAC_SRC_DIR)/source/pitch_filter_c.c \
	$(ISAC_SRC_DIR)/source/lpc_masking_model.c

#am__append_3 = $(ISAC_BASE_SRCS) isac_dec.c isac_enc.c
am__append_4 = $(AEC_BASE_SRCS) aec.c
#am__append_5 = \
#	-I$(ISAC_SRC_DIR)/source \
#	-I$(ISAC_SRC_DIR)/util \
#	-I$(ISAC_SRC_DIR)/interface

am__append_6 = \
	-I$(AEC_SRC_DIR)/include \
	-I$(top_srcdir)/webrtc/common_audio/signal_processing/include \
	-I$(top_srcdir)/webrtc/modules/audio_processing/utility \
	-I$(top_srcdir)/webrtc/system_wrappers/interface

subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(srcdir)/mswebrtc.iss.in $(top_srcdir)/configure AUTHORS \
	COPYING ChangeLog INSTALL NEWS build-aux/config.guess \
	build-aux/config.sub build-aux/depcomp build-aux/install-sh \
	build-aux/ltmain.sh build-aux/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = mswebrtc.iss
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pluginsdir)"
LTLIBRARIES = $(plugins_LTLIBRARIES)
am__DEPENDENCIES_1 =
libmswebrtc_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__libmswebrtc_la_SOURCES_DIST = mswebrtc.c \
	$(WEBRTC_COMMON_DIR)/spl_sqrt.c \
	$(WEBRTC_COMMON_DIR)/real_fft.c \
	$(WEBRTC_COMMON_DIR)/filter_ar_fast_q12.c \
	$(WEBRTC_COMMON_DIR)/webrtc_fft_t_1024_8.c \
	$(WEBRTC_COMMON_DIR)/complex_bit_reverse.c \
	$(WEBRTC_COMMON_DIR)/spl_init.c \
	$(WEBRTC_COMMON_DIR)/splitting_filter.c \
	$(WEBRTC_COMMON_DIR)/spl_sqrt_floor.c \
	$(WEBRTC_COMMON_DIR)/levinson_durbin.c \
	$(WEBRTC_COMMON_DIR)/filter_ar.c \
	$(WEBRTC_COMMON_DIR)/get_scaling_square.c \
	$(WEBRTC_COMMON_DIR)/resample_fractional.c \
	$(WEBRTC_COMMON_DIR)/resample.c \
	$(WEBRTC_COMMON_DIR)/downsample_fast.c \
	$(WEBRTC_COMMON_DIR)/filter_ma_fast_q12.c \
	$(WEBRTC_COMMON_DIR)/auto_corr_to_refl_coef.c \
	$(WEBRTC_COMMON_DIR)/auto_correlation.c \
	$(WEBRTC_COMMON_DIR)/refl_coef_to_lpc.c \
	$(WEBRTC_COMMON_DIR)/dot_product_with_scale.c \
	$(WEBRTC_COMMON_DIR)/copy_set_operations.c \
	$(WEBRTC_COMMON_DIR)/spl_version.c \
	$(WEBRTC_COMMON_DIR)/cross_correlation.c \
	$(WEBRTC_COMMON_DIR)/sqrt_of_one_minus_x_squared.c \
	$(WEBRTC_COMMON_DIR)/ilbc_specific_functions.c \
	$(WEBRTC_COMMON_DIR)/resample_by_2.c \
	$(WEBRTC_COMMON_DIR)/complex_fft.c \
	$(WEBRTC_COMMON_DIR)/resample_48khz.c \
	$(WEBRTC_COMMON_DIR)/energy.c \
	$(WEBRTC_COMMON_DIR)/get_hanning_window.c \
	$(WEBRTC_COMMON_DIR)/randomization_functions.c \
	$(WEBRTC_COMMON_DIR)/vector_scaling_operations.c \
	$(WEBRTC_COMMON_DIR)/webrtc_fft_t_rad.c \
	$(WEBRTC_COMMON_DIR)/resample_by_2_internal.c \
	$(WEBRTC_COMMON_DIR)/lpc_to_refl_coef.c \
	$(WEBRTC_COMMON_DIR)/min_max_operations.c \
	$(WEBRTC_COMMON_DIR)/division_operations.c \
	$(ISAC_SRC_DIR)/source/fft.c \
	$(ISAC_SRC_DIR)/source/arith_routines.c \
	$(ISAC_SRC_DIR)/source/arith_routines_hist.c \
	$(ISAC_SRC_DIR)/source/arith_routines_logist.c \
	$(ISAC_SRC_DIR)/source/bandwidth_estimator.c \
	$(ISAC_SRC_DIR)/source/decode.c \
	$(ISAC_SRC_DIR)/source/decode_bwe.c \
	$(ISAC_SRC_DIR)/source/encode.c \
	$(ISAC_SRC_DIR)/source/entropy_coding.c \
	$(ISAC_SRC_DIR)/source/filterbank_tables.c \
	$(ISAC_SRC_DIR)/source/filterbanks.c \
	$(ISAC_SRC_DIR)/source/lattice.c \
	$(ISAC_SRC_DIR)/source/lpc_tables.c \
	$(ISAC_SRC_DIR)/source/pitch_estimator.c \
	$(ISAC_SRC_DIR)/source/pitch_filter.c \
	$(ISAC_SRC_DIR)/source/pitch_gain_tables.c \
	$(ISAC_SRC_DIR)/source/pitch_lag_tables.c \
	$(ISAC_SRC_DIR)/source/spectrum_ar_model_tables.c \
	$(ISAC_SRC_DIR)/source/transform.c \
	$(ISAC_SRC_DIR)/source/initialize.c \
	$(ISAC_SRC_DIR)/source/crc.c \
	$(ISAC_SRC_DIR)/source/encode_lpc_swb.c \
	$(ISAC_SRC_DIR)/source/filter_functions.c \
	$(ISAC_SRC_DIR)/source/isac.c \
	$(ISAC_SRC_DIR)/source/lpc_analysis.c \
	$(ISAC_SRC_DIR)/source/lpc_gain_swb_tables.c \
	$(ISAC_SRC_DIR)/source/lpc_shape_swb12_tables.c \
	$(ISAC_SRC_DIR)/source/lpc_shape_swb16_tables.c \
	$(ISAC_SRC_DIR)/util/utility.c \
	$(ISAC_SRC_DIR)/source/decode_plc.c \
	$(ISAC_SRC_DIR)/source/filters.c \
	$(ISAC_SRC_DIR)/source/isacfix.c \
	$(ISAC_SRC_DIR)/source/lattice_c.c \
	$(ISAC_SRC_DIR)/source/pitch_filter_c.c \
	$(ISAC_SRC_DIR)/source/lpc_masking_model.c isac_dec.c \
	isac_enc.c $(AEC_SRC_DIR)/echo_control_mobile.c \
	$(AEC_SRC_DIR)/aecm_core.c $(AEC_SRC_DIR)/../utility/fft4g.c \
	$(AEC_SRC_DIR)/../utility/ring_buffer.c \
	$(AEC_SRC_DIR)/../utility/delay_estimator.c \
	$(AEC_SRC_DIR)/../utility/delay_estimator_wrapper.c aec.c
am__objects_1 = spl_sqrt.lo real_fft.lo filter_ar_fast_q12.lo \
	webrtc_fft_t_1024_8.lo complex_bit_reverse.lo spl_init.lo \
	splitting_filter.lo spl_sqrt_floor.lo levinson_durbin.lo \
	filter_ar.lo get_scaling_square.lo resample_fractional.lo \
	resample.lo downsample_fast.lo filter_ma_fast_q12.lo \
	auto_corr_to_refl_coef.lo auto_correlation.lo \
	refl_coef_to_lpc.lo dot_product_with_scale.lo \
	copy_set_operations.lo spl_version.lo cross_correlation.lo \
	sqrt_of_one_minus_x_squared.lo ilbc_specific_functions.lo \
	resample_by_2.lo complex_fft.lo resample_48khz.lo energy.lo \
	get_hanning_window.lo randomization_functions.lo \
	vector_scaling_operations.lo webrtc_fft_t_rad.lo \
	resample_by_2_internal.lo lpc_to_refl_coef.lo \
	min_max_operations.lo division_operations.lo
#am__objects_2 = initialize.lo crc.lo \
#	encode_lpc_swb.lo filter_functions.lo \
#	isac.lo lpc_analysis.lo \
#	lpc_gain_swb_tables.lo \
#	lpc_shape_swb12_tables.lo \
#	lpc_shape_swb16_tables.lo utility.lo
am__objects_3 = decode_plc.lo filters.lo \
	initialize.lo isacfix.lo lattice_c.lo \
	pitch_filter_c.lo \
	lpc_masking_model.lo
am__objects_4 = fft.lo arith_routines.lo arith_routines_hist.lo \
	arith_routines_logist.lo bandwidth_estimator.lo decode.lo \
	decode_bwe.lo encode.lo entropy_coding.lo filterbank_tables.lo \
	filterbanks.lo lattice.lo lpc_tables.lo pitch_estimator.lo \
	pitch_filter.lo pitch_gain_tables.lo pitch_lag_tables.lo \
	spectrum_ar_model_tables.lo transform.lo $(am__objects_2) \
	$(am__objects_3)
#am__objects_5 = $(am__objects_4) isac_dec.lo \
#	isac_enc.lo
am__objects_6 = echo_control_mobile.lo aecm_core.lo fft4g.lo \
	ring_buffer.lo delay_estimator.lo delay_estimator_wrapper.lo
am__objects_7 = $(am__objects_6) aec.lo
am_libmswebrtc_la_OBJECTS = mswebrtc.lo $(am__objects_1) \
	$(am__objects_5) $(am__objects_7)
libmswebrtc_la_OBJECTS = $(am_libmswebrtc_la_OBJECTS)
libmswebrtc_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libmswebrtc_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libmswebrtc_la_SOURCES)
DIST_SOURCES = $(am__libmswebrtc_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/hf/harry.he/linphone_sdk/mswebrtc/build-aux/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = arm-linux-androideabi-ar
AS = as
AUTOCONF = ${SHELL} /home/hf/harry.he/linphone_sdk/mswebrtc/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/hf/harry.he/linphone_sdk/mswebrtc/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/hf/harry.he/linphone_sdk/mswebrtc/build-aux/missing --run automake-1.11
AWK = mawk
CC = arm-linux-androideabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wno-unused-function -Wno-unused-variable -DIN_LINPHONE -Wall -DWEBRTC_LINUX -DWEBRTC_THREAD_RR
CPP = arm-linux-androideabi-gcc -E
CPPFLAGS = -Wno-strict-aliasing
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISAC_FLAVOUR = fix
LD = /home/hf/harry.he/arm-linux-androideabi-4.6/arm-linux-androideabi/bin/ld
LDFLAGS = -lstdc++
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LINPHONE_CFLAGS = -I/home/hf/harry.he/linphone_sdk/linphone-3.8.5/coreapi -I/home/hf/harry.he/linphone_sdk/linphone-3.8.5/oRTP/include -I/home/hf/harry.he/linphone_sdk/linphone-3.8.5/mediastreamer2/include -I/home/hf/harry.he/linphone_sdk/linphone-3.8.5/mediastreamer2/include/mediastreamer2
LINPHONE_LIBS = /home/hf/harry.he/linphone_sdk/linphone-3.8.5/coreapi/liblinphone.la /home/hf/harry.he/linphone_sdk/linphone-3.8.5/oRTP/src/libortp.la /home/hf/harry.he/linphone_sdk/linphone-3.8.5/mediastreamer2/src/libmediastreamer_base.la /home/hf/harry.he/linphone_sdk/linphone-3.8.5/mediastreamer2/src/libmediastreamer_voip.la
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/hf/harry.he/linphone_sdk/mswebrtc/build-aux/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /home/hf/harry.he/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = mswebrtc
PACKAGE_BUGREPORT = 
PACKAGE_NAME = mswebrtc
PACKAGE_STRING = mswebrtc 1.0.0
PACKAGE_TARNAME = mswebrtc
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = arm-linux-androideabi-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRICT_CFLAGS = -Werror
STRIP = arm-linux-androideabi-strip
VERSION = 1.0.0
abs_builddir = /home/hf/harry.he/linphone_sdk/mswebrtc
abs_srcdir = /home/hf/harry.he/linphone_sdk/mswebrtc
abs_top_builddir = /home/hf/harry.he/linphone_sdk/mswebrtc
abs_top_srcdir = /home/hf/harry.he/linphone_sdk/mswebrtc
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-unknown-linux-androideabi
host_alias = arm-linux-androideabi
host_cpu = arm
host_os = linux-androideabi
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/hf/harry.he/linphone_sdk/mswebrtc/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = arm-unknown-linux-androideabi
target_alias = 
target_cpu = arm
target_os = linux-androideabi
target_vendor = unknown
top_build_prefix = 
top_builddir = .
top_srcdir = .
EXTRA_DIST = autogen.sh mswebrtc.iss.in
webrtc_VERSION = 1.0.0
webrtc_DIR = $(top_srcdir)/webrtc
ISAC_SRC_DIR = $(top_srcdir)/webrtc/modules/audio_coding/codecs/isac/$(ISAC_FLAVOUR)
AEC_SRC_DIR = $(top_srcdir)/webrtc/modules/audio_processing/aecm
WEBRTC_COMMON_DIR = $(top_srcdir)/webrtc/common_audio/signal_processing
pluginsdir = $(libdir)/mediastreamer/plugins
plugins_LTLIBRARIES = libmswebrtc.la
WEBRTC_COMMON_SRCS = $(WEBRTC_COMMON_DIR)/spl_sqrt.c \
	$(WEBRTC_COMMON_DIR)/real_fft.c \
	$(WEBRTC_COMMON_DIR)/filter_ar_fast_q12.c \
	$(WEBRTC_COMMON_DIR)/webrtc_fft_t_1024_8.c \
	$(WEBRTC_COMMON_DIR)/complex_bit_reverse.c \
	$(WEBRTC_COMMON_DIR)/spl_init.c \
	$(WEBRTC_COMMON_DIR)/splitting_filter.c \
	$(WEBRTC_COMMON_DIR)/spl_sqrt_floor.c \
	$(WEBRTC_COMMON_DIR)/levinson_durbin.c \
	$(WEBRTC_COMMON_DIR)/filter_ar.c \
	$(WEBRTC_COMMON_DIR)/get_scaling_square.c \
	$(WEBRTC_COMMON_DIR)/resample_fractional.c \
	$(WEBRTC_COMMON_DIR)/resample.c \
	$(WEBRTC_COMMON_DIR)/downsample_fast.c \
	$(WEBRTC_COMMON_DIR)/filter_ma_fast_q12.c \
	$(WEBRTC_COMMON_DIR)/auto_corr_to_refl_coef.c \
	$(WEBRTC_COMMON_DIR)/auto_correlation.c \
	$(WEBRTC_COMMON_DIR)/refl_coef_to_lpc.c \
	$(WEBRTC_COMMON_DIR)/dot_product_with_scale.c \
	$(WEBRTC_COMMON_DIR)/copy_set_operations.c \
	$(WEBRTC_COMMON_DIR)/spl_version.c \
	$(WEBRTC_COMMON_DIR)/cross_correlation.c \
	$(WEBRTC_COMMON_DIR)/sqrt_of_one_minus_x_squared.c \
	$(WEBRTC_COMMON_DIR)/ilbc_specific_functions.c \
	$(WEBRTC_COMMON_DIR)/resample_by_2.c \
	$(WEBRTC_COMMON_DIR)/complex_fft.c \
	$(WEBRTC_COMMON_DIR)/resample_48khz.c \
	$(WEBRTC_COMMON_DIR)/energy.c \
	$(WEBRTC_COMMON_DIR)/get_hanning_window.c \
	$(WEBRTC_COMMON_DIR)/randomization_functions.c \
	$(WEBRTC_COMMON_DIR)/vector_scaling_operations.c \
	$(WEBRTC_COMMON_DIR)/webrtc_fft_t_rad.c \
	$(WEBRTC_COMMON_DIR)/resample_by_2_internal.c \
	$(WEBRTC_COMMON_DIR)/lpc_to_refl_coef.c \
	$(WEBRTC_COMMON_DIR)/min_max_operations.c \
	$(WEBRTC_COMMON_DIR)/division_operations.c


# Build the list of isac source files
ISAC_BASE_SRCS = $(ISAC_SRC_DIR)/source/fft.c \
	$(ISAC_SRC_DIR)/source/arith_routines.c \
	$(ISAC_SRC_DIR)/source/arith_routines_hist.c \
	$(ISAC_SRC_DIR)/source/arith_routines_logist.c \
	$(ISAC_SRC_DIR)/source/bandwidth_estimator.c \
	$(ISAC_SRC_DIR)/source/decode.c \
	$(ISAC_SRC_DIR)/source/decode_bwe.c \
	$(ISAC_SRC_DIR)/source/encode.c \
	$(ISAC_SRC_DIR)/source/entropy_coding.c \
	$(ISAC_SRC_DIR)/source/filterbank_tables.c \
	$(ISAC_SRC_DIR)/source/filterbanks.c \
	$(ISAC_SRC_DIR)/source/lattice.c \
	$(ISAC_SRC_DIR)/source/lpc_tables.c \
	$(ISAC_SRC_DIR)/source/pitch_estimator.c \
	$(ISAC_SRC_DIR)/source/pitch_filter.c \
	$(ISAC_SRC_DIR)/source/pitch_gain_tables.c \
	$(ISAC_SRC_DIR)/source/pitch_lag_tables.c \
	$(ISAC_SRC_DIR)/source/spectrum_ar_model_tables.c \
	$(ISAC_SRC_DIR)/source/transform.c $(am__append_1) \
	$(am__append_2)

# TODO: use assembly-optimized versions when possible
#	$(ISAC_SRC_DIR)/source/filters_neon.c \
#	$(ISAC_SRC_DIR)/source/lpc_masking_model_neon.S \
#	$(ISAC_SRC_DIR)/source/pitch_filter_armv6.S \
#	$(ISAC_SRC_DIR)/source/lattice_neon.S \
#	$(ISAC_SRC_DIR)/source/lattice_armv7.S
AEC_BASE_SRCS = \
	$(AEC_SRC_DIR)/echo_control_mobile.c \
	$(AEC_SRC_DIR)/aecm_core.c \
	$(AEC_SRC_DIR)/../utility/fft4g.c \
	$(AEC_SRC_DIR)/../utility/ring_buffer.c \
	$(AEC_SRC_DIR)/../utility/delay_estimator.c \
	$(AEC_SRC_DIR)/../utility/delay_estimator_wrapper.c

libmswebrtc_la_SOURCES = mswebrtc.c $(WEBRTC_COMMON_SRCS) \
	$(am__append_3) $(am__append_4)
libmswebrtc_la_LIBADD = \
	$(ORTP_LIBS) \
	$(LINPHONE_LIBS) \
	-lm

libmswebrtc_la_LDFLAGS = -module -no-undefined -avoid-version
webrtc_CFLAGS = -I$(webrtc_DIR) -I$(WEBRTC_COMMON_DIR)/include \
	$(am__append_5) $(am__append_6)
AM_CFLAGS = \
	$(webrtc_CFLAGS) \
	$(LINPHONE_CFLAGS) \
	$(STRICT_CFLAGS)

INSTALLDIR = $(shell cd $(top_builddir) && pwd)/$(PACKAGE)-install
INSTALLDIR_WITH_PREFIX = $(INSTALLDIR)/$(prefix)
ZIPFILE = $(shell cd $(top_builddir) && pwd)/$(PACKAGE)-win32-$(VERSION).zip
ZIP_EXCLUDED = include 
ISS_SCRIPT = mswebrtc.iss
ISS_SCRIPT_PATH = $(shell cd $(top_srcdir) && pwd)/$(ISS_SCRIPT)
#path to Inno Setup 5 compiler
ISCC = ISCC.exe
PACKAGE_WIN32_FILELIST = $(PACKAGE)-win32.filelist
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
mswebrtc.iss: $(top_builddir)/config.status $(srcdir)/mswebrtc.iss.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-pluginsLTLIBRARIES: $(plugins_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pluginsdir)" || $(MKDIR_P) "$(DESTDIR)$(pluginsdir)"
	@list='$(plugins_LTLIBRARIES)'; test -n "$(pluginsdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pluginsdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pluginsdir)"; \
	}

uninstall-pluginsLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(plugins_LTLIBRARIES)'; test -n "$(pluginsdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pluginsdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pluginsdir)/$$f"; \
	done

clean-pluginsLTLIBRARIES:
	-test -z "$(plugins_LTLIBRARIES)" || rm -f $(plugins_LTLIBRARIES)
	@list='$(plugins_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmswebrtc.la: $(libmswebrtc_la_OBJECTS) $(libmswebrtc_la_DEPENDENCIES) $(EXTRA_libmswebrtc_la_DEPENDENCIES) 
	$(libmswebrtc_la_LINK) -rpath $(pluginsdir) $(libmswebrtc_la_OBJECTS) $(libmswebrtc_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/aec.Plo
include ./$(DEPDIR)/aecm_core.Plo
include ./$(DEPDIR)/arith_routines.Plo
include ./$(DEPDIR)/arith_routines_hist.Plo
include ./$(DEPDIR)/arith_routines_logist.Plo
include ./$(DEPDIR)/auto_corr_to_refl_coef.Plo
include ./$(DEPDIR)/auto_correlation.Plo
include ./$(DEPDIR)/bandwidth_estimator.Plo
include ./$(DEPDIR)/complex_bit_reverse.Plo
include ./$(DEPDIR)/complex_fft.Plo
include ./$(DEPDIR)/copy_set_operations.Plo
include ./$(DEPDIR)/crc.Plo
include ./$(DEPDIR)/cross_correlation.Plo
include ./$(DEPDIR)/decode.Plo
include ./$(DEPDIR)/decode_bwe.Plo
include ./$(DEPDIR)/decode_plc.Plo
include ./$(DEPDIR)/delay_estimator.Plo
include ./$(DEPDIR)/delay_estimator_wrapper.Plo
include ./$(DEPDIR)/division_operations.Plo
include ./$(DEPDIR)/dot_product_with_scale.Plo
include ./$(DEPDIR)/downsample_fast.Plo
include ./$(DEPDIR)/echo_control_mobile.Plo
include ./$(DEPDIR)/encode.Plo
include ./$(DEPDIR)/encode_lpc_swb.Plo
include ./$(DEPDIR)/energy.Plo
include ./$(DEPDIR)/entropy_coding.Plo
include ./$(DEPDIR)/fft.Plo
include ./$(DEPDIR)/fft4g.Plo
include ./$(DEPDIR)/filter_ar.Plo
include ./$(DEPDIR)/filter_ar_fast_q12.Plo
include ./$(DEPDIR)/filter_functions.Plo
include ./$(DEPDIR)/filter_ma_fast_q12.Plo
include ./$(DEPDIR)/filterbank_tables.Plo
include ./$(DEPDIR)/filterbanks.Plo
include ./$(DEPDIR)/filters.Plo
include ./$(DEPDIR)/get_hanning_window.Plo
include ./$(DEPDIR)/get_scaling_square.Plo
include ./$(DEPDIR)/ilbc_specific_functions.Plo
include ./$(DEPDIR)/initialize.Plo
include ./$(DEPDIR)/isac.Plo
include ./$(DEPDIR)/isac_dec.Plo
include ./$(DEPDIR)/isac_enc.Plo
include ./$(DEPDIR)/isacfix.Plo
include ./$(DEPDIR)/lattice.Plo
include ./$(DEPDIR)/lattice_c.Plo
include ./$(DEPDIR)/levinson_durbin.Plo
include ./$(DEPDIR)/lpc_analysis.Plo
include ./$(DEPDIR)/lpc_gain_swb_tables.Plo
include ./$(DEPDIR)/lpc_masking_model.Plo
include ./$(DEPDIR)/lpc_shape_swb12_tables.Plo
include ./$(DEPDIR)/lpc_shape_swb16_tables.Plo
include ./$(DEPDIR)/lpc_tables.Plo
include ./$(DEPDIR)/lpc_to_refl_coef.Plo
include ./$(DEPDIR)/min_max_operations.Plo
include ./$(DEPDIR)/mswebrtc.Plo
include ./$(DEPDIR)/pitch_estimator.Plo
include ./$(DEPDIR)/pitch_filter.Plo
include ./$(DEPDIR)/pitch_filter_c.Plo
include ./$(DEPDIR)/pitch_gain_tables.Plo
include ./$(DEPDIR)/pitch_lag_tables.Plo
include ./$(DEPDIR)/randomization_functions.Plo
include ./$(DEPDIR)/real_fft.Plo
include ./$(DEPDIR)/refl_coef_to_lpc.Plo
include ./$(DEPDIR)/resample.Plo
include ./$(DEPDIR)/resample_48khz.Plo
include ./$(DEPDIR)/resample_by_2.Plo
include ./$(DEPDIR)/resample_by_2_internal.Plo
include ./$(DEPDIR)/resample_fractional.Plo
include ./$(DEPDIR)/ring_buffer.Plo
include ./$(DEPDIR)/spectrum_ar_model_tables.Plo
include ./$(DEPDIR)/spl_init.Plo
include ./$(DEPDIR)/spl_sqrt.Plo
include ./$(DEPDIR)/spl_sqrt_floor.Plo
include ./$(DEPDIR)/spl_version.Plo
include ./$(DEPDIR)/splitting_filter.Plo
include ./$(DEPDIR)/sqrt_of_one_minus_x_squared.Plo
include ./$(DEPDIR)/transform.Plo
include ./$(DEPDIR)/utility.Plo
include ./$(DEPDIR)/vector_scaling_operations.Plo
include ./$(DEPDIR)/webrtc_fft_t_1024_8.Plo
include ./$(DEPDIR)/webrtc_fft_t_rad.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

spl_sqrt.lo: $(WEBRTC_COMMON_DIR)/spl_sqrt.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spl_sqrt.lo -MD -MP -MF $(DEPDIR)/spl_sqrt.Tpo -c -o spl_sqrt.lo `test -f '$(WEBRTC_COMMON_DIR)/spl_sqrt.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/spl_sqrt.c
	$(am__mv) $(DEPDIR)/spl_sqrt.Tpo $(DEPDIR)/spl_sqrt.Plo
#	source='$(WEBRTC_COMMON_DIR)/spl_sqrt.c' object='spl_sqrt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spl_sqrt.lo `test -f '$(WEBRTC_COMMON_DIR)/spl_sqrt.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/spl_sqrt.c

real_fft.lo: $(WEBRTC_COMMON_DIR)/real_fft.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT real_fft.lo -MD -MP -MF $(DEPDIR)/real_fft.Tpo -c -o real_fft.lo `test -f '$(WEBRTC_COMMON_DIR)/real_fft.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/real_fft.c
	$(am__mv) $(DEPDIR)/real_fft.Tpo $(DEPDIR)/real_fft.Plo
#	source='$(WEBRTC_COMMON_DIR)/real_fft.c' object='real_fft.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o real_fft.lo `test -f '$(WEBRTC_COMMON_DIR)/real_fft.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/real_fft.c

filter_ar_fast_q12.lo: $(WEBRTC_COMMON_DIR)/filter_ar_fast_q12.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter_ar_fast_q12.lo -MD -MP -MF $(DEPDIR)/filter_ar_fast_q12.Tpo -c -o filter_ar_fast_q12.lo `test -f '$(WEBRTC_COMMON_DIR)/filter_ar_fast_q12.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/filter_ar_fast_q12.c
	$(am__mv) $(DEPDIR)/filter_ar_fast_q12.Tpo $(DEPDIR)/filter_ar_fast_q12.Plo
#	source='$(WEBRTC_COMMON_DIR)/filter_ar_fast_q12.c' object='filter_ar_fast_q12.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter_ar_fast_q12.lo `test -f '$(WEBRTC_COMMON_DIR)/filter_ar_fast_q12.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/filter_ar_fast_q12.c

webrtc_fft_t_1024_8.lo: $(WEBRTC_COMMON_DIR)/webrtc_fft_t_1024_8.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT webrtc_fft_t_1024_8.lo -MD -MP -MF $(DEPDIR)/webrtc_fft_t_1024_8.Tpo -c -o webrtc_fft_t_1024_8.lo `test -f '$(WEBRTC_COMMON_DIR)/webrtc_fft_t_1024_8.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/webrtc_fft_t_1024_8.c
	$(am__mv) $(DEPDIR)/webrtc_fft_t_1024_8.Tpo $(DEPDIR)/webrtc_fft_t_1024_8.Plo
#	source='$(WEBRTC_COMMON_DIR)/webrtc_fft_t_1024_8.c' object='webrtc_fft_t_1024_8.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o webrtc_fft_t_1024_8.lo `test -f '$(WEBRTC_COMMON_DIR)/webrtc_fft_t_1024_8.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/webrtc_fft_t_1024_8.c

complex_bit_reverse.lo: $(WEBRTC_COMMON_DIR)/complex_bit_reverse.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_bit_reverse.lo -MD -MP -MF $(DEPDIR)/complex_bit_reverse.Tpo -c -o complex_bit_reverse.lo `test -f '$(WEBRTC_COMMON_DIR)/complex_bit_reverse.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/complex_bit_reverse.c
	$(am__mv) $(DEPDIR)/complex_bit_reverse.Tpo $(DEPDIR)/complex_bit_reverse.Plo
#	source='$(WEBRTC_COMMON_DIR)/complex_bit_reverse.c' object='complex_bit_reverse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_bit_reverse.lo `test -f '$(WEBRTC_COMMON_DIR)/complex_bit_reverse.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/complex_bit_reverse.c

spl_init.lo: $(WEBRTC_COMMON_DIR)/spl_init.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spl_init.lo -MD -MP -MF $(DEPDIR)/spl_init.Tpo -c -o spl_init.lo `test -f '$(WEBRTC_COMMON_DIR)/spl_init.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/spl_init.c
	$(am__mv) $(DEPDIR)/spl_init.Tpo $(DEPDIR)/spl_init.Plo
#	source='$(WEBRTC_COMMON_DIR)/spl_init.c' object='spl_init.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spl_init.lo `test -f '$(WEBRTC_COMMON_DIR)/spl_init.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/spl_init.c

splitting_filter.lo: $(WEBRTC_COMMON_DIR)/splitting_filter.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT splitting_filter.lo -MD -MP -MF $(DEPDIR)/splitting_filter.Tpo -c -o splitting_filter.lo `test -f '$(WEBRTC_COMMON_DIR)/splitting_filter.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/splitting_filter.c
	$(am__mv) $(DEPDIR)/splitting_filter.Tpo $(DEPDIR)/splitting_filter.Plo
#	source='$(WEBRTC_COMMON_DIR)/splitting_filter.c' object='splitting_filter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o splitting_filter.lo `test -f '$(WEBRTC_COMMON_DIR)/splitting_filter.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/splitting_filter.c

spl_sqrt_floor.lo: $(WEBRTC_COMMON_DIR)/spl_sqrt_floor.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spl_sqrt_floor.lo -MD -MP -MF $(DEPDIR)/spl_sqrt_floor.Tpo -c -o spl_sqrt_floor.lo `test -f '$(WEBRTC_COMMON_DIR)/spl_sqrt_floor.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/spl_sqrt_floor.c
	$(am__mv) $(DEPDIR)/spl_sqrt_floor.Tpo $(DEPDIR)/spl_sqrt_floor.Plo
#	source='$(WEBRTC_COMMON_DIR)/spl_sqrt_floor.c' object='spl_sqrt_floor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spl_sqrt_floor.lo `test -f '$(WEBRTC_COMMON_DIR)/spl_sqrt_floor.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/spl_sqrt_floor.c

levinson_durbin.lo: $(WEBRTC_COMMON_DIR)/levinson_durbin.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT levinson_durbin.lo -MD -MP -MF $(DEPDIR)/levinson_durbin.Tpo -c -o levinson_durbin.lo `test -f '$(WEBRTC_COMMON_DIR)/levinson_durbin.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/levinson_durbin.c
	$(am__mv) $(DEPDIR)/levinson_durbin.Tpo $(DEPDIR)/levinson_durbin.Plo
#	source='$(WEBRTC_COMMON_DIR)/levinson_durbin.c' object='levinson_durbin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o levinson_durbin.lo `test -f '$(WEBRTC_COMMON_DIR)/levinson_durbin.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/levinson_durbin.c

filter_ar.lo: $(WEBRTC_COMMON_DIR)/filter_ar.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter_ar.lo -MD -MP -MF $(DEPDIR)/filter_ar.Tpo -c -o filter_ar.lo `test -f '$(WEBRTC_COMMON_DIR)/filter_ar.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/filter_ar.c
	$(am__mv) $(DEPDIR)/filter_ar.Tpo $(DEPDIR)/filter_ar.Plo
#	source='$(WEBRTC_COMMON_DIR)/filter_ar.c' object='filter_ar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter_ar.lo `test -f '$(WEBRTC_COMMON_DIR)/filter_ar.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/filter_ar.c

get_scaling_square.lo: $(WEBRTC_COMMON_DIR)/get_scaling_square.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_scaling_square.lo -MD -MP -MF $(DEPDIR)/get_scaling_square.Tpo -c -o get_scaling_square.lo `test -f '$(WEBRTC_COMMON_DIR)/get_scaling_square.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/get_scaling_square.c
	$(am__mv) $(DEPDIR)/get_scaling_square.Tpo $(DEPDIR)/get_scaling_square.Plo
#	source='$(WEBRTC_COMMON_DIR)/get_scaling_square.c' object='get_scaling_square.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_scaling_square.lo `test -f '$(WEBRTC_COMMON_DIR)/get_scaling_square.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/get_scaling_square.c

resample_fractional.lo: $(WEBRTC_COMMON_DIR)/resample_fractional.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_fractional.lo -MD -MP -MF $(DEPDIR)/resample_fractional.Tpo -c -o resample_fractional.lo `test -f '$(WEBRTC_COMMON_DIR)/resample_fractional.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/resample_fractional.c
	$(am__mv) $(DEPDIR)/resample_fractional.Tpo $(DEPDIR)/resample_fractional.Plo
#	source='$(WEBRTC_COMMON_DIR)/resample_fractional.c' object='resample_fractional.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_fractional.lo `test -f '$(WEBRTC_COMMON_DIR)/resample_fractional.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/resample_fractional.c

resample.lo: $(WEBRTC_COMMON_DIR)/resample.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample.lo -MD -MP -MF $(DEPDIR)/resample.Tpo -c -o resample.lo `test -f '$(WEBRTC_COMMON_DIR)/resample.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/resample.c
	$(am__mv) $(DEPDIR)/resample.Tpo $(DEPDIR)/resample.Plo
#	source='$(WEBRTC_COMMON_DIR)/resample.c' object='resample.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample.lo `test -f '$(WEBRTC_COMMON_DIR)/resample.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/resample.c

downsample_fast.lo: $(WEBRTC_COMMON_DIR)/downsample_fast.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT downsample_fast.lo -MD -MP -MF $(DEPDIR)/downsample_fast.Tpo -c -o downsample_fast.lo `test -f '$(WEBRTC_COMMON_DIR)/downsample_fast.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/downsample_fast.c
	$(am__mv) $(DEPDIR)/downsample_fast.Tpo $(DEPDIR)/downsample_fast.Plo
#	source='$(WEBRTC_COMMON_DIR)/downsample_fast.c' object='downsample_fast.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o downsample_fast.lo `test -f '$(WEBRTC_COMMON_DIR)/downsample_fast.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/downsample_fast.c

filter_ma_fast_q12.lo: $(WEBRTC_COMMON_DIR)/filter_ma_fast_q12.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter_ma_fast_q12.lo -MD -MP -MF $(DEPDIR)/filter_ma_fast_q12.Tpo -c -o filter_ma_fast_q12.lo `test -f '$(WEBRTC_COMMON_DIR)/filter_ma_fast_q12.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/filter_ma_fast_q12.c
	$(am__mv) $(DEPDIR)/filter_ma_fast_q12.Tpo $(DEPDIR)/filter_ma_fast_q12.Plo
#	source='$(WEBRTC_COMMON_DIR)/filter_ma_fast_q12.c' object='filter_ma_fast_q12.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter_ma_fast_q12.lo `test -f '$(WEBRTC_COMMON_DIR)/filter_ma_fast_q12.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/filter_ma_fast_q12.c

auto_corr_to_refl_coef.lo: $(WEBRTC_COMMON_DIR)/auto_corr_to_refl_coef.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT auto_corr_to_refl_coef.lo -MD -MP -MF $(DEPDIR)/auto_corr_to_refl_coef.Tpo -c -o auto_corr_to_refl_coef.lo `test -f '$(WEBRTC_COMMON_DIR)/auto_corr_to_refl_coef.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/auto_corr_to_refl_coef.c
	$(am__mv) $(DEPDIR)/auto_corr_to_refl_coef.Tpo $(DEPDIR)/auto_corr_to_refl_coef.Plo
#	source='$(WEBRTC_COMMON_DIR)/auto_corr_to_refl_coef.c' object='auto_corr_to_refl_coef.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o auto_corr_to_refl_coef.lo `test -f '$(WEBRTC_COMMON_DIR)/auto_corr_to_refl_coef.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/auto_corr_to_refl_coef.c

auto_correlation.lo: $(WEBRTC_COMMON_DIR)/auto_correlation.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT auto_correlation.lo -MD -MP -MF $(DEPDIR)/auto_correlation.Tpo -c -o auto_correlation.lo `test -f '$(WEBRTC_COMMON_DIR)/auto_correlation.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/auto_correlation.c
	$(am__mv) $(DEPDIR)/auto_correlation.Tpo $(DEPDIR)/auto_correlation.Plo
#	source='$(WEBRTC_COMMON_DIR)/auto_correlation.c' object='auto_correlation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o auto_correlation.lo `test -f '$(WEBRTC_COMMON_DIR)/auto_correlation.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/auto_correlation.c

refl_coef_to_lpc.lo: $(WEBRTC_COMMON_DIR)/refl_coef_to_lpc.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT refl_coef_to_lpc.lo -MD -MP -MF $(DEPDIR)/refl_coef_to_lpc.Tpo -c -o refl_coef_to_lpc.lo `test -f '$(WEBRTC_COMMON_DIR)/refl_coef_to_lpc.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/refl_coef_to_lpc.c
	$(am__mv) $(DEPDIR)/refl_coef_to_lpc.Tpo $(DEPDIR)/refl_coef_to_lpc.Plo
#	source='$(WEBRTC_COMMON_DIR)/refl_coef_to_lpc.c' object='refl_coef_to_lpc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o refl_coef_to_lpc.lo `test -f '$(WEBRTC_COMMON_DIR)/refl_coef_to_lpc.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/refl_coef_to_lpc.c

dot_product_with_scale.lo: $(WEBRTC_COMMON_DIR)/dot_product_with_scale.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dot_product_with_scale.lo -MD -MP -MF $(DEPDIR)/dot_product_with_scale.Tpo -c -o dot_product_with_scale.lo `test -f '$(WEBRTC_COMMON_DIR)/dot_product_with_scale.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/dot_product_with_scale.c
	$(am__mv) $(DEPDIR)/dot_product_with_scale.Tpo $(DEPDIR)/dot_product_with_scale.Plo
#	source='$(WEBRTC_COMMON_DIR)/dot_product_with_scale.c' object='dot_product_with_scale.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dot_product_with_scale.lo `test -f '$(WEBRTC_COMMON_DIR)/dot_product_with_scale.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/dot_product_with_scale.c

copy_set_operations.lo: $(WEBRTC_COMMON_DIR)/copy_set_operations.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT copy_set_operations.lo -MD -MP -MF $(DEPDIR)/copy_set_operations.Tpo -c -o copy_set_operations.lo `test -f '$(WEBRTC_COMMON_DIR)/copy_set_operations.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/copy_set_operations.c
	$(am__mv) $(DEPDIR)/copy_set_operations.Tpo $(DEPDIR)/copy_set_operations.Plo
#	source='$(WEBRTC_COMMON_DIR)/copy_set_operations.c' object='copy_set_operations.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o copy_set_operations.lo `test -f '$(WEBRTC_COMMON_DIR)/copy_set_operations.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/copy_set_operations.c

spl_version.lo: $(WEBRTC_COMMON_DIR)/spl_version.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spl_version.lo -MD -MP -MF $(DEPDIR)/spl_version.Tpo -c -o spl_version.lo `test -f '$(WEBRTC_COMMON_DIR)/spl_version.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/spl_version.c
	$(am__mv) $(DEPDIR)/spl_version.Tpo $(DEPDIR)/spl_version.Plo
#	source='$(WEBRTC_COMMON_DIR)/spl_version.c' object='spl_version.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spl_version.lo `test -f '$(WEBRTC_COMMON_DIR)/spl_version.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/spl_version.c

cross_correlation.lo: $(WEBRTC_COMMON_DIR)/cross_correlation.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cross_correlation.lo -MD -MP -MF $(DEPDIR)/cross_correlation.Tpo -c -o cross_correlation.lo `test -f '$(WEBRTC_COMMON_DIR)/cross_correlation.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/cross_correlation.c
	$(am__mv) $(DEPDIR)/cross_correlation.Tpo $(DEPDIR)/cross_correlation.Plo
#	source='$(WEBRTC_COMMON_DIR)/cross_correlation.c' object='cross_correlation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cross_correlation.lo `test -f '$(WEBRTC_COMMON_DIR)/cross_correlation.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/cross_correlation.c

sqrt_of_one_minus_x_squared.lo: $(WEBRTC_COMMON_DIR)/sqrt_of_one_minus_x_squared.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sqrt_of_one_minus_x_squared.lo -MD -MP -MF $(DEPDIR)/sqrt_of_one_minus_x_squared.Tpo -c -o sqrt_of_one_minus_x_squared.lo `test -f '$(WEBRTC_COMMON_DIR)/sqrt_of_one_minus_x_squared.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/sqrt_of_one_minus_x_squared.c
	$(am__mv) $(DEPDIR)/sqrt_of_one_minus_x_squared.Tpo $(DEPDIR)/sqrt_of_one_minus_x_squared.Plo
#	source='$(WEBRTC_COMMON_DIR)/sqrt_of_one_minus_x_squared.c' object='sqrt_of_one_minus_x_squared.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sqrt_of_one_minus_x_squared.lo `test -f '$(WEBRTC_COMMON_DIR)/sqrt_of_one_minus_x_squared.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/sqrt_of_one_minus_x_squared.c

ilbc_specific_functions.lo: $(WEBRTC_COMMON_DIR)/ilbc_specific_functions.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ilbc_specific_functions.lo -MD -MP -MF $(DEPDIR)/ilbc_specific_functions.Tpo -c -o ilbc_specific_functions.lo `test -f '$(WEBRTC_COMMON_DIR)/ilbc_specific_functions.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/ilbc_specific_functions.c
	$(am__mv) $(DEPDIR)/ilbc_specific_functions.Tpo $(DEPDIR)/ilbc_specific_functions.Plo
#	source='$(WEBRTC_COMMON_DIR)/ilbc_specific_functions.c' object='ilbc_specific_functions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ilbc_specific_functions.lo `test -f '$(WEBRTC_COMMON_DIR)/ilbc_specific_functions.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/ilbc_specific_functions.c

resample_by_2.lo: $(WEBRTC_COMMON_DIR)/resample_by_2.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_by_2.lo -MD -MP -MF $(DEPDIR)/resample_by_2.Tpo -c -o resample_by_2.lo `test -f '$(WEBRTC_COMMON_DIR)/resample_by_2.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/resample_by_2.c
	$(am__mv) $(DEPDIR)/resample_by_2.Tpo $(DEPDIR)/resample_by_2.Plo
#	source='$(WEBRTC_COMMON_DIR)/resample_by_2.c' object='resample_by_2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_by_2.lo `test -f '$(WEBRTC_COMMON_DIR)/resample_by_2.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/resample_by_2.c

complex_fft.lo: $(WEBRTC_COMMON_DIR)/complex_fft.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT complex_fft.lo -MD -MP -MF $(DEPDIR)/complex_fft.Tpo -c -o complex_fft.lo `test -f '$(WEBRTC_COMMON_DIR)/complex_fft.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/complex_fft.c
	$(am__mv) $(DEPDIR)/complex_fft.Tpo $(DEPDIR)/complex_fft.Plo
#	source='$(WEBRTC_COMMON_DIR)/complex_fft.c' object='complex_fft.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o complex_fft.lo `test -f '$(WEBRTC_COMMON_DIR)/complex_fft.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/complex_fft.c

resample_48khz.lo: $(WEBRTC_COMMON_DIR)/resample_48khz.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_48khz.lo -MD -MP -MF $(DEPDIR)/resample_48khz.Tpo -c -o resample_48khz.lo `test -f '$(WEBRTC_COMMON_DIR)/resample_48khz.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/resample_48khz.c
	$(am__mv) $(DEPDIR)/resample_48khz.Tpo $(DEPDIR)/resample_48khz.Plo
#	source='$(WEBRTC_COMMON_DIR)/resample_48khz.c' object='resample_48khz.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_48khz.lo `test -f '$(WEBRTC_COMMON_DIR)/resample_48khz.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/resample_48khz.c

energy.lo: $(WEBRTC_COMMON_DIR)/energy.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT energy.lo -MD -MP -MF $(DEPDIR)/energy.Tpo -c -o energy.lo `test -f '$(WEBRTC_COMMON_DIR)/energy.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/energy.c
	$(am__mv) $(DEPDIR)/energy.Tpo $(DEPDIR)/energy.Plo
#	source='$(WEBRTC_COMMON_DIR)/energy.c' object='energy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o energy.lo `test -f '$(WEBRTC_COMMON_DIR)/energy.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/energy.c

get_hanning_window.lo: $(WEBRTC_COMMON_DIR)/get_hanning_window.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT get_hanning_window.lo -MD -MP -MF $(DEPDIR)/get_hanning_window.Tpo -c -o get_hanning_window.lo `test -f '$(WEBRTC_COMMON_DIR)/get_hanning_window.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/get_hanning_window.c
	$(am__mv) $(DEPDIR)/get_hanning_window.Tpo $(DEPDIR)/get_hanning_window.Plo
#	source='$(WEBRTC_COMMON_DIR)/get_hanning_window.c' object='get_hanning_window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o get_hanning_window.lo `test -f '$(WEBRTC_COMMON_DIR)/get_hanning_window.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/get_hanning_window.c

randomization_functions.lo: $(WEBRTC_COMMON_DIR)/randomization_functions.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randomization_functions.lo -MD -MP -MF $(DEPDIR)/randomization_functions.Tpo -c -o randomization_functions.lo `test -f '$(WEBRTC_COMMON_DIR)/randomization_functions.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/randomization_functions.c
	$(am__mv) $(DEPDIR)/randomization_functions.Tpo $(DEPDIR)/randomization_functions.Plo
#	source='$(WEBRTC_COMMON_DIR)/randomization_functions.c' object='randomization_functions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randomization_functions.lo `test -f '$(WEBRTC_COMMON_DIR)/randomization_functions.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/randomization_functions.c

vector_scaling_operations.lo: $(WEBRTC_COMMON_DIR)/vector_scaling_operations.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vector_scaling_operations.lo -MD -MP -MF $(DEPDIR)/vector_scaling_operations.Tpo -c -o vector_scaling_operations.lo `test -f '$(WEBRTC_COMMON_DIR)/vector_scaling_operations.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/vector_scaling_operations.c
	$(am__mv) $(DEPDIR)/vector_scaling_operations.Tpo $(DEPDIR)/vector_scaling_operations.Plo
#	source='$(WEBRTC_COMMON_DIR)/vector_scaling_operations.c' object='vector_scaling_operations.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vector_scaling_operations.lo `test -f '$(WEBRTC_COMMON_DIR)/vector_scaling_operations.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/vector_scaling_operations.c

webrtc_fft_t_rad.lo: $(WEBRTC_COMMON_DIR)/webrtc_fft_t_rad.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT webrtc_fft_t_rad.lo -MD -MP -MF $(DEPDIR)/webrtc_fft_t_rad.Tpo -c -o webrtc_fft_t_rad.lo `test -f '$(WEBRTC_COMMON_DIR)/webrtc_fft_t_rad.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/webrtc_fft_t_rad.c
	$(am__mv) $(DEPDIR)/webrtc_fft_t_rad.Tpo $(DEPDIR)/webrtc_fft_t_rad.Plo
#	source='$(WEBRTC_COMMON_DIR)/webrtc_fft_t_rad.c' object='webrtc_fft_t_rad.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o webrtc_fft_t_rad.lo `test -f '$(WEBRTC_COMMON_DIR)/webrtc_fft_t_rad.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/webrtc_fft_t_rad.c

resample_by_2_internal.lo: $(WEBRTC_COMMON_DIR)/resample_by_2_internal.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT resample_by_2_internal.lo -MD -MP -MF $(DEPDIR)/resample_by_2_internal.Tpo -c -o resample_by_2_internal.lo `test -f '$(WEBRTC_COMMON_DIR)/resample_by_2_internal.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/resample_by_2_internal.c
	$(am__mv) $(DEPDIR)/resample_by_2_internal.Tpo $(DEPDIR)/resample_by_2_internal.Plo
#	source='$(WEBRTC_COMMON_DIR)/resample_by_2_internal.c' object='resample_by_2_internal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o resample_by_2_internal.lo `test -f '$(WEBRTC_COMMON_DIR)/resample_by_2_internal.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/resample_by_2_internal.c

lpc_to_refl_coef.lo: $(WEBRTC_COMMON_DIR)/lpc_to_refl_coef.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc_to_refl_coef.lo -MD -MP -MF $(DEPDIR)/lpc_to_refl_coef.Tpo -c -o lpc_to_refl_coef.lo `test -f '$(WEBRTC_COMMON_DIR)/lpc_to_refl_coef.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/lpc_to_refl_coef.c
	$(am__mv) $(DEPDIR)/lpc_to_refl_coef.Tpo $(DEPDIR)/lpc_to_refl_coef.Plo
#	source='$(WEBRTC_COMMON_DIR)/lpc_to_refl_coef.c' object='lpc_to_refl_coef.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc_to_refl_coef.lo `test -f '$(WEBRTC_COMMON_DIR)/lpc_to_refl_coef.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/lpc_to_refl_coef.c

min_max_operations.lo: $(WEBRTC_COMMON_DIR)/min_max_operations.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT min_max_operations.lo -MD -MP -MF $(DEPDIR)/min_max_operations.Tpo -c -o min_max_operations.lo `test -f '$(WEBRTC_COMMON_DIR)/min_max_operations.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/min_max_operations.c
	$(am__mv) $(DEPDIR)/min_max_operations.Tpo $(DEPDIR)/min_max_operations.Plo
#	source='$(WEBRTC_COMMON_DIR)/min_max_operations.c' object='min_max_operations.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o min_max_operations.lo `test -f '$(WEBRTC_COMMON_DIR)/min_max_operations.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/min_max_operations.c

division_operations.lo: $(WEBRTC_COMMON_DIR)/division_operations.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT division_operations.lo -MD -MP -MF $(DEPDIR)/division_operations.Tpo -c -o division_operations.lo `test -f '$(WEBRTC_COMMON_DIR)/division_operations.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/division_operations.c
	$(am__mv) $(DEPDIR)/division_operations.Tpo $(DEPDIR)/division_operations.Plo
#	source='$(WEBRTC_COMMON_DIR)/division_operations.c' object='division_operations.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o division_operations.lo `test -f '$(WEBRTC_COMMON_DIR)/division_operations.c' || echo '$(srcdir)/'`$(WEBRTC_COMMON_DIR)/division_operations.c

fft.lo: $(ISAC_SRC_DIR)/source/fft.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fft.lo -MD -MP -MF $(DEPDIR)/fft.Tpo -c -o fft.lo `test -f '$(ISAC_SRC_DIR)/source/fft.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/fft.c
	$(am__mv) $(DEPDIR)/fft.Tpo $(DEPDIR)/fft.Plo
#	source='$(ISAC_SRC_DIR)/source/fft.c' object='fft.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fft.lo `test -f '$(ISAC_SRC_DIR)/source/fft.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/fft.c

arith_routines.lo: $(ISAC_SRC_DIR)/source/arith_routines.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT arith_routines.lo -MD -MP -MF $(DEPDIR)/arith_routines.Tpo -c -o arith_routines.lo `test -f '$(ISAC_SRC_DIR)/source/arith_routines.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/arith_routines.c
	$(am__mv) $(DEPDIR)/arith_routines.Tpo $(DEPDIR)/arith_routines.Plo
#	source='$(ISAC_SRC_DIR)/source/arith_routines.c' object='arith_routines.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o arith_routines.lo `test -f '$(ISAC_SRC_DIR)/source/arith_routines.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/arith_routines.c

arith_routines_hist.lo: $(ISAC_SRC_DIR)/source/arith_routines_hist.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT arith_routines_hist.lo -MD -MP -MF $(DEPDIR)/arith_routines_hist.Tpo -c -o arith_routines_hist.lo `test -f '$(ISAC_SRC_DIR)/source/arith_routines_hist.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/arith_routines_hist.c
	$(am__mv) $(DEPDIR)/arith_routines_hist.Tpo $(DEPDIR)/arith_routines_hist.Plo
#	source='$(ISAC_SRC_DIR)/source/arith_routines_hist.c' object='arith_routines_hist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o arith_routines_hist.lo `test -f '$(ISAC_SRC_DIR)/source/arith_routines_hist.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/arith_routines_hist.c

arith_routines_logist.lo: $(ISAC_SRC_DIR)/source/arith_routines_logist.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT arith_routines_logist.lo -MD -MP -MF $(DEPDIR)/arith_routines_logist.Tpo -c -o arith_routines_logist.lo `test -f '$(ISAC_SRC_DIR)/source/arith_routines_logist.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/arith_routines_logist.c
	$(am__mv) $(DEPDIR)/arith_routines_logist.Tpo $(DEPDIR)/arith_routines_logist.Plo
#	source='$(ISAC_SRC_DIR)/source/arith_routines_logist.c' object='arith_routines_logist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o arith_routines_logist.lo `test -f '$(ISAC_SRC_DIR)/source/arith_routines_logist.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/arith_routines_logist.c

bandwidth_estimator.lo: $(ISAC_SRC_DIR)/source/bandwidth_estimator.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bandwidth_estimator.lo -MD -MP -MF $(DEPDIR)/bandwidth_estimator.Tpo -c -o bandwidth_estimator.lo `test -f '$(ISAC_SRC_DIR)/source/bandwidth_estimator.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/bandwidth_estimator.c
	$(am__mv) $(DEPDIR)/bandwidth_estimator.Tpo $(DEPDIR)/bandwidth_estimator.Plo
#	source='$(ISAC_SRC_DIR)/source/bandwidth_estimator.c' object='bandwidth_estimator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bandwidth_estimator.lo `test -f '$(ISAC_SRC_DIR)/source/bandwidth_estimator.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/bandwidth_estimator.c

decode.lo: $(ISAC_SRC_DIR)/source/decode.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT decode.lo -MD -MP -MF $(DEPDIR)/decode.Tpo -c -o decode.lo `test -f '$(ISAC_SRC_DIR)/source/decode.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/decode.c
	$(am__mv) $(DEPDIR)/decode.Tpo $(DEPDIR)/decode.Plo
#	source='$(ISAC_SRC_DIR)/source/decode.c' object='decode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o decode.lo `test -f '$(ISAC_SRC_DIR)/source/decode.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/decode.c

decode_bwe.lo: $(ISAC_SRC_DIR)/source/decode_bwe.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT decode_bwe.lo -MD -MP -MF $(DEPDIR)/decode_bwe.Tpo -c -o decode_bwe.lo `test -f '$(ISAC_SRC_DIR)/source/decode_bwe.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/decode_bwe.c
	$(am__mv) $(DEPDIR)/decode_bwe.Tpo $(DEPDIR)/decode_bwe.Plo
#	source='$(ISAC_SRC_DIR)/source/decode_bwe.c' object='decode_bwe.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o decode_bwe.lo `test -f '$(ISAC_SRC_DIR)/source/decode_bwe.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/decode_bwe.c

encode.lo: $(ISAC_SRC_DIR)/source/encode.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT encode.lo -MD -MP -MF $(DEPDIR)/encode.Tpo -c -o encode.lo `test -f '$(ISAC_SRC_DIR)/source/encode.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/encode.c
	$(am__mv) $(DEPDIR)/encode.Tpo $(DEPDIR)/encode.Plo
#	source='$(ISAC_SRC_DIR)/source/encode.c' object='encode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o encode.lo `test -f '$(ISAC_SRC_DIR)/source/encode.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/encode.c

entropy_coding.lo: $(ISAC_SRC_DIR)/source/entropy_coding.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT entropy_coding.lo -MD -MP -MF $(DEPDIR)/entropy_coding.Tpo -c -o entropy_coding.lo `test -f '$(ISAC_SRC_DIR)/source/entropy_coding.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/entropy_coding.c
	$(am__mv) $(DEPDIR)/entropy_coding.Tpo $(DEPDIR)/entropy_coding.Plo
#	source='$(ISAC_SRC_DIR)/source/entropy_coding.c' object='entropy_coding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o entropy_coding.lo `test -f '$(ISAC_SRC_DIR)/source/entropy_coding.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/entropy_coding.c

filterbank_tables.lo: $(ISAC_SRC_DIR)/source/filterbank_tables.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filterbank_tables.lo -MD -MP -MF $(DEPDIR)/filterbank_tables.Tpo -c -o filterbank_tables.lo `test -f '$(ISAC_SRC_DIR)/source/filterbank_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/filterbank_tables.c
	$(am__mv) $(DEPDIR)/filterbank_tables.Tpo $(DEPDIR)/filterbank_tables.Plo
#	source='$(ISAC_SRC_DIR)/source/filterbank_tables.c' object='filterbank_tables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filterbank_tables.lo `test -f '$(ISAC_SRC_DIR)/source/filterbank_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/filterbank_tables.c

filterbanks.lo: $(ISAC_SRC_DIR)/source/filterbanks.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filterbanks.lo -MD -MP -MF $(DEPDIR)/filterbanks.Tpo -c -o filterbanks.lo `test -f '$(ISAC_SRC_DIR)/source/filterbanks.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/filterbanks.c
	$(am__mv) $(DEPDIR)/filterbanks.Tpo $(DEPDIR)/filterbanks.Plo
#	source='$(ISAC_SRC_DIR)/source/filterbanks.c' object='filterbanks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filterbanks.lo `test -f '$(ISAC_SRC_DIR)/source/filterbanks.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/filterbanks.c

lattice.lo: $(ISAC_SRC_DIR)/source/lattice.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lattice.lo -MD -MP -MF $(DEPDIR)/lattice.Tpo -c -o lattice.lo `test -f '$(ISAC_SRC_DIR)/source/lattice.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lattice.c
	$(am__mv) $(DEPDIR)/lattice.Tpo $(DEPDIR)/lattice.Plo
#	source='$(ISAC_SRC_DIR)/source/lattice.c' object='lattice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lattice.lo `test -f '$(ISAC_SRC_DIR)/source/lattice.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lattice.c

lpc_tables.lo: $(ISAC_SRC_DIR)/source/lpc_tables.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc_tables.lo -MD -MP -MF $(DEPDIR)/lpc_tables.Tpo -c -o lpc_tables.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_tables.c
	$(am__mv) $(DEPDIR)/lpc_tables.Tpo $(DEPDIR)/lpc_tables.Plo
#	source='$(ISAC_SRC_DIR)/source/lpc_tables.c' object='lpc_tables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc_tables.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_tables.c

pitch_estimator.lo: $(ISAC_SRC_DIR)/source/pitch_estimator.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pitch_estimator.lo -MD -MP -MF $(DEPDIR)/pitch_estimator.Tpo -c -o pitch_estimator.lo `test -f '$(ISAC_SRC_DIR)/source/pitch_estimator.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/pitch_estimator.c
	$(am__mv) $(DEPDIR)/pitch_estimator.Tpo $(DEPDIR)/pitch_estimator.Plo
#	source='$(ISAC_SRC_DIR)/source/pitch_estimator.c' object='pitch_estimator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pitch_estimator.lo `test -f '$(ISAC_SRC_DIR)/source/pitch_estimator.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/pitch_estimator.c

pitch_filter.lo: $(ISAC_SRC_DIR)/source/pitch_filter.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pitch_filter.lo -MD -MP -MF $(DEPDIR)/pitch_filter.Tpo -c -o pitch_filter.lo `test -f '$(ISAC_SRC_DIR)/source/pitch_filter.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/pitch_filter.c
	$(am__mv) $(DEPDIR)/pitch_filter.Tpo $(DEPDIR)/pitch_filter.Plo
#	source='$(ISAC_SRC_DIR)/source/pitch_filter.c' object='pitch_filter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pitch_filter.lo `test -f '$(ISAC_SRC_DIR)/source/pitch_filter.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/pitch_filter.c

pitch_gain_tables.lo: $(ISAC_SRC_DIR)/source/pitch_gain_tables.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pitch_gain_tables.lo -MD -MP -MF $(DEPDIR)/pitch_gain_tables.Tpo -c -o pitch_gain_tables.lo `test -f '$(ISAC_SRC_DIR)/source/pitch_gain_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/pitch_gain_tables.c
	$(am__mv) $(DEPDIR)/pitch_gain_tables.Tpo $(DEPDIR)/pitch_gain_tables.Plo
#	source='$(ISAC_SRC_DIR)/source/pitch_gain_tables.c' object='pitch_gain_tables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pitch_gain_tables.lo `test -f '$(ISAC_SRC_DIR)/source/pitch_gain_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/pitch_gain_tables.c

pitch_lag_tables.lo: $(ISAC_SRC_DIR)/source/pitch_lag_tables.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pitch_lag_tables.lo -MD -MP -MF $(DEPDIR)/pitch_lag_tables.Tpo -c -o pitch_lag_tables.lo `test -f '$(ISAC_SRC_DIR)/source/pitch_lag_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/pitch_lag_tables.c
	$(am__mv) $(DEPDIR)/pitch_lag_tables.Tpo $(DEPDIR)/pitch_lag_tables.Plo
#	source='$(ISAC_SRC_DIR)/source/pitch_lag_tables.c' object='pitch_lag_tables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pitch_lag_tables.lo `test -f '$(ISAC_SRC_DIR)/source/pitch_lag_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/pitch_lag_tables.c

spectrum_ar_model_tables.lo: $(ISAC_SRC_DIR)/source/spectrum_ar_model_tables.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT spectrum_ar_model_tables.lo -MD -MP -MF $(DEPDIR)/spectrum_ar_model_tables.Tpo -c -o spectrum_ar_model_tables.lo `test -f '$(ISAC_SRC_DIR)/source/spectrum_ar_model_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/spectrum_ar_model_tables.c
	$(am__mv) $(DEPDIR)/spectrum_ar_model_tables.Tpo $(DEPDIR)/spectrum_ar_model_tables.Plo
#	source='$(ISAC_SRC_DIR)/source/spectrum_ar_model_tables.c' object='spectrum_ar_model_tables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spectrum_ar_model_tables.lo `test -f '$(ISAC_SRC_DIR)/source/spectrum_ar_model_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/spectrum_ar_model_tables.c

transform.lo: $(ISAC_SRC_DIR)/source/transform.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transform.lo -MD -MP -MF $(DEPDIR)/transform.Tpo -c -o transform.lo `test -f '$(ISAC_SRC_DIR)/source/transform.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/transform.c
	$(am__mv) $(DEPDIR)/transform.Tpo $(DEPDIR)/transform.Plo
#	source='$(ISAC_SRC_DIR)/source/transform.c' object='transform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transform.lo `test -f '$(ISAC_SRC_DIR)/source/transform.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/transform.c

initialize.lo: $(ISAC_SRC_DIR)/source/initialize.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT initialize.lo -MD -MP -MF $(DEPDIR)/initialize.Tpo -c -o initialize.lo `test -f '$(ISAC_SRC_DIR)/source/initialize.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/initialize.c
	$(am__mv) $(DEPDIR)/initialize.Tpo $(DEPDIR)/initialize.Plo
#	source='$(ISAC_SRC_DIR)/source/initialize.c' object='initialize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o initialize.lo `test -f '$(ISAC_SRC_DIR)/source/initialize.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/initialize.c

crc.lo: $(ISAC_SRC_DIR)/source/crc.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crc.lo -MD -MP -MF $(DEPDIR)/crc.Tpo -c -o crc.lo `test -f '$(ISAC_SRC_DIR)/source/crc.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/crc.c
	$(am__mv) $(DEPDIR)/crc.Tpo $(DEPDIR)/crc.Plo
#	source='$(ISAC_SRC_DIR)/source/crc.c' object='crc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crc.lo `test -f '$(ISAC_SRC_DIR)/source/crc.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/crc.c

encode_lpc_swb.lo: $(ISAC_SRC_DIR)/source/encode_lpc_swb.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT encode_lpc_swb.lo -MD -MP -MF $(DEPDIR)/encode_lpc_swb.Tpo -c -o encode_lpc_swb.lo `test -f '$(ISAC_SRC_DIR)/source/encode_lpc_swb.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/encode_lpc_swb.c
	$(am__mv) $(DEPDIR)/encode_lpc_swb.Tpo $(DEPDIR)/encode_lpc_swb.Plo
#	source='$(ISAC_SRC_DIR)/source/encode_lpc_swb.c' object='encode_lpc_swb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o encode_lpc_swb.lo `test -f '$(ISAC_SRC_DIR)/source/encode_lpc_swb.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/encode_lpc_swb.c

filter_functions.lo: $(ISAC_SRC_DIR)/source/filter_functions.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filter_functions.lo -MD -MP -MF $(DEPDIR)/filter_functions.Tpo -c -o filter_functions.lo `test -f '$(ISAC_SRC_DIR)/source/filter_functions.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/filter_functions.c
	$(am__mv) $(DEPDIR)/filter_functions.Tpo $(DEPDIR)/filter_functions.Plo
#	source='$(ISAC_SRC_DIR)/source/filter_functions.c' object='filter_functions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filter_functions.lo `test -f '$(ISAC_SRC_DIR)/source/filter_functions.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/filter_functions.c

isac.lo: $(ISAC_SRC_DIR)/source/isac.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT isac.lo -MD -MP -MF $(DEPDIR)/isac.Tpo -c -o isac.lo `test -f '$(ISAC_SRC_DIR)/source/isac.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/isac.c
	$(am__mv) $(DEPDIR)/isac.Tpo $(DEPDIR)/isac.Plo
#	source='$(ISAC_SRC_DIR)/source/isac.c' object='isac.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o isac.lo `test -f '$(ISAC_SRC_DIR)/source/isac.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/isac.c

lpc_analysis.lo: $(ISAC_SRC_DIR)/source/lpc_analysis.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc_analysis.lo -MD -MP -MF $(DEPDIR)/lpc_analysis.Tpo -c -o lpc_analysis.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_analysis.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_analysis.c
	$(am__mv) $(DEPDIR)/lpc_analysis.Tpo $(DEPDIR)/lpc_analysis.Plo
#	source='$(ISAC_SRC_DIR)/source/lpc_analysis.c' object='lpc_analysis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc_analysis.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_analysis.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_analysis.c

lpc_gain_swb_tables.lo: $(ISAC_SRC_DIR)/source/lpc_gain_swb_tables.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc_gain_swb_tables.lo -MD -MP -MF $(DEPDIR)/lpc_gain_swb_tables.Tpo -c -o lpc_gain_swb_tables.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_gain_swb_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_gain_swb_tables.c
	$(am__mv) $(DEPDIR)/lpc_gain_swb_tables.Tpo $(DEPDIR)/lpc_gain_swb_tables.Plo
#	source='$(ISAC_SRC_DIR)/source/lpc_gain_swb_tables.c' object='lpc_gain_swb_tables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc_gain_swb_tables.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_gain_swb_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_gain_swb_tables.c

lpc_shape_swb12_tables.lo: $(ISAC_SRC_DIR)/source/lpc_shape_swb12_tables.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc_shape_swb12_tables.lo -MD -MP -MF $(DEPDIR)/lpc_shape_swb12_tables.Tpo -c -o lpc_shape_swb12_tables.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_shape_swb12_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_shape_swb12_tables.c
	$(am__mv) $(DEPDIR)/lpc_shape_swb12_tables.Tpo $(DEPDIR)/lpc_shape_swb12_tables.Plo
#	source='$(ISAC_SRC_DIR)/source/lpc_shape_swb12_tables.c' object='lpc_shape_swb12_tables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc_shape_swb12_tables.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_shape_swb12_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_shape_swb12_tables.c

lpc_shape_swb16_tables.lo: $(ISAC_SRC_DIR)/source/lpc_shape_swb16_tables.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc_shape_swb16_tables.lo -MD -MP -MF $(DEPDIR)/lpc_shape_swb16_tables.Tpo -c -o lpc_shape_swb16_tables.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_shape_swb16_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_shape_swb16_tables.c
	$(am__mv) $(DEPDIR)/lpc_shape_swb16_tables.Tpo $(DEPDIR)/lpc_shape_swb16_tables.Plo
#	source='$(ISAC_SRC_DIR)/source/lpc_shape_swb16_tables.c' object='lpc_shape_swb16_tables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc_shape_swb16_tables.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_shape_swb16_tables.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_shape_swb16_tables.c

utility.lo: $(ISAC_SRC_DIR)/util/utility.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT utility.lo -MD -MP -MF $(DEPDIR)/utility.Tpo -c -o utility.lo `test -f '$(ISAC_SRC_DIR)/util/utility.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/util/utility.c
	$(am__mv) $(DEPDIR)/utility.Tpo $(DEPDIR)/utility.Plo
#	source='$(ISAC_SRC_DIR)/util/utility.c' object='utility.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o utility.lo `test -f '$(ISAC_SRC_DIR)/util/utility.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/util/utility.c

decode_plc.lo: $(ISAC_SRC_DIR)/source/decode_plc.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT decode_plc.lo -MD -MP -MF $(DEPDIR)/decode_plc.Tpo -c -o decode_plc.lo `test -f '$(ISAC_SRC_DIR)/source/decode_plc.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/decode_plc.c
	$(am__mv) $(DEPDIR)/decode_plc.Tpo $(DEPDIR)/decode_plc.Plo
#	source='$(ISAC_SRC_DIR)/source/decode_plc.c' object='decode_plc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o decode_plc.lo `test -f '$(ISAC_SRC_DIR)/source/decode_plc.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/decode_plc.c

filters.lo: $(ISAC_SRC_DIR)/source/filters.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT filters.lo -MD -MP -MF $(DEPDIR)/filters.Tpo -c -o filters.lo `test -f '$(ISAC_SRC_DIR)/source/filters.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/filters.c
	$(am__mv) $(DEPDIR)/filters.Tpo $(DEPDIR)/filters.Plo
#	source='$(ISAC_SRC_DIR)/source/filters.c' object='filters.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o filters.lo `test -f '$(ISAC_SRC_DIR)/source/filters.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/filters.c

isacfix.lo: $(ISAC_SRC_DIR)/source/isacfix.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT isacfix.lo -MD -MP -MF $(DEPDIR)/isacfix.Tpo -c -o isacfix.lo `test -f '$(ISAC_SRC_DIR)/source/isacfix.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/isacfix.c
	$(am__mv) $(DEPDIR)/isacfix.Tpo $(DEPDIR)/isacfix.Plo
#	source='$(ISAC_SRC_DIR)/source/isacfix.c' object='isacfix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o isacfix.lo `test -f '$(ISAC_SRC_DIR)/source/isacfix.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/isacfix.c

lattice_c.lo: $(ISAC_SRC_DIR)/source/lattice_c.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lattice_c.lo -MD -MP -MF $(DEPDIR)/lattice_c.Tpo -c -o lattice_c.lo `test -f '$(ISAC_SRC_DIR)/source/lattice_c.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lattice_c.c
	$(am__mv) $(DEPDIR)/lattice_c.Tpo $(DEPDIR)/lattice_c.Plo
#	source='$(ISAC_SRC_DIR)/source/lattice_c.c' object='lattice_c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lattice_c.lo `test -f '$(ISAC_SRC_DIR)/source/lattice_c.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lattice_c.c

pitch_filter_c.lo: $(ISAC_SRC_DIR)/source/pitch_filter_c.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pitch_filter_c.lo -MD -MP -MF $(DEPDIR)/pitch_filter_c.Tpo -c -o pitch_filter_c.lo `test -f '$(ISAC_SRC_DIR)/source/pitch_filter_c.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/pitch_filter_c.c
	$(am__mv) $(DEPDIR)/pitch_filter_c.Tpo $(DEPDIR)/pitch_filter_c.Plo
#	source='$(ISAC_SRC_DIR)/source/pitch_filter_c.c' object='pitch_filter_c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pitch_filter_c.lo `test -f '$(ISAC_SRC_DIR)/source/pitch_filter_c.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/pitch_filter_c.c

lpc_masking_model.lo: $(ISAC_SRC_DIR)/source/lpc_masking_model.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lpc_masking_model.lo -MD -MP -MF $(DEPDIR)/lpc_masking_model.Tpo -c -o lpc_masking_model.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_masking_model.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_masking_model.c
	$(am__mv) $(DEPDIR)/lpc_masking_model.Tpo $(DEPDIR)/lpc_masking_model.Plo
#	source='$(ISAC_SRC_DIR)/source/lpc_masking_model.c' object='lpc_masking_model.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lpc_masking_model.lo `test -f '$(ISAC_SRC_DIR)/source/lpc_masking_model.c' || echo '$(srcdir)/'`$(ISAC_SRC_DIR)/source/lpc_masking_model.c

echo_control_mobile.lo: $(AEC_SRC_DIR)/echo_control_mobile.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT echo_control_mobile.lo -MD -MP -MF $(DEPDIR)/echo_control_mobile.Tpo -c -o echo_control_mobile.lo `test -f '$(AEC_SRC_DIR)/echo_control_mobile.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/echo_control_mobile.c
	$(am__mv) $(DEPDIR)/echo_control_mobile.Tpo $(DEPDIR)/echo_control_mobile.Plo
#	source='$(AEC_SRC_DIR)/echo_control_mobile.c' object='echo_control_mobile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o echo_control_mobile.lo `test -f '$(AEC_SRC_DIR)/echo_control_mobile.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/echo_control_mobile.c

aecm_core.lo: $(AEC_SRC_DIR)/aecm_core.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aecm_core.lo -MD -MP -MF $(DEPDIR)/aecm_core.Tpo -c -o aecm_core.lo `test -f '$(AEC_SRC_DIR)/aecm_core.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/aecm_core.c
	$(am__mv) $(DEPDIR)/aecm_core.Tpo $(DEPDIR)/aecm_core.Plo
#	source='$(AEC_SRC_DIR)/aecm_core.c' object='aecm_core.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aecm_core.lo `test -f '$(AEC_SRC_DIR)/aecm_core.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/aecm_core.c

fft4g.lo: $(AEC_SRC_DIR)/../utility/fft4g.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fft4g.lo -MD -MP -MF $(DEPDIR)/fft4g.Tpo -c -o fft4g.lo `test -f '$(AEC_SRC_DIR)/../utility/fft4g.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/../utility/fft4g.c
	$(am__mv) $(DEPDIR)/fft4g.Tpo $(DEPDIR)/fft4g.Plo
#	source='$(AEC_SRC_DIR)/../utility/fft4g.c' object='fft4g.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fft4g.lo `test -f '$(AEC_SRC_DIR)/../utility/fft4g.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/../utility/fft4g.c

ring_buffer.lo: $(AEC_SRC_DIR)/../utility/ring_buffer.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ring_buffer.lo -MD -MP -MF $(DEPDIR)/ring_buffer.Tpo -c -o ring_buffer.lo `test -f '$(AEC_SRC_DIR)/../utility/ring_buffer.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/../utility/ring_buffer.c
	$(am__mv) $(DEPDIR)/ring_buffer.Tpo $(DEPDIR)/ring_buffer.Plo
#	source='$(AEC_SRC_DIR)/../utility/ring_buffer.c' object='ring_buffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ring_buffer.lo `test -f '$(AEC_SRC_DIR)/../utility/ring_buffer.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/../utility/ring_buffer.c

delay_estimator.lo: $(AEC_SRC_DIR)/../utility/delay_estimator.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT delay_estimator.lo -MD -MP -MF $(DEPDIR)/delay_estimator.Tpo -c -o delay_estimator.lo `test -f '$(AEC_SRC_DIR)/../utility/delay_estimator.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/../utility/delay_estimator.c
	$(am__mv) $(DEPDIR)/delay_estimator.Tpo $(DEPDIR)/delay_estimator.Plo
#	source='$(AEC_SRC_DIR)/../utility/delay_estimator.c' object='delay_estimator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o delay_estimator.lo `test -f '$(AEC_SRC_DIR)/../utility/delay_estimator.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/../utility/delay_estimator.c

delay_estimator_wrapper.lo: $(AEC_SRC_DIR)/../utility/delay_estimator_wrapper.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT delay_estimator_wrapper.lo -MD -MP -MF $(DEPDIR)/delay_estimator_wrapper.Tpo -c -o delay_estimator_wrapper.lo `test -f '$(AEC_SRC_DIR)/../utility/delay_estimator_wrapper.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/../utility/delay_estimator_wrapper.c
	$(am__mv) $(DEPDIR)/delay_estimator_wrapper.Tpo $(DEPDIR)/delay_estimator_wrapper.Plo
#	source='$(AEC_SRC_DIR)/../utility/delay_estimator_wrapper.c' object='delay_estimator_wrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o delay_estimator_wrapper.lo `test -f '$(AEC_SRC_DIR)/../utility/delay_estimator_wrapper.c' || echo '$(srcdir)/'`$(AEC_SRC_DIR)/../utility/delay_estimator_wrapper.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) config.h
installdirs:
	for dir in "$(DESTDIR)$(pluginsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-pluginsLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pluginsLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pluginsLTLIBRARIES

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-generic clean-libtool clean-pluginsLTLIBRARIES ctags \
	dist dist-all dist-bzip2 dist-gzip dist-lzip dist-lzma \
	dist-shar dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pluginsLTLIBRARIES \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-pluginsLTLIBRARIES


ISAC_FLAVOUR ?= fix # use 'main' or 'fix'

setup.exe: zip
	cd $(INSTALLDIR_WITH_PREFIX) && \
	rm -f $(PACKAGE_WIN32_FILELIST) && \
	for file in `find` ; do \
		if ! test -d $$file ; then \
			echo "Source: $$file; Destdir: {app}\\`dirname $$file`; Flags: ignoreversion" \
			>> $(PACKAGE_WIN32_FILELIST) ;\
		fi \
	done
	cp $(ISS_SCRIPT) $(INSTALLDIR_WITH_PREFIX)/.
	cd $(INSTALLDIR_WITH_PREFIX) && \
	$(ISCC) $(ISS_SCRIPT) 
	mv $(INSTALLDIR_WITH_PREFIX)/Output/setup.exe $(PACKAGE)-$(VERSION)-setup.exe
	rm -rf $(INSTALLDIR_WITH_PREFIX)/Output
	rm -f $(INSTALLDIR_WITH_PREFIX)/$(PACKAGE_WIN32_FILELIST)
	rm -f $(INSTALLDIR_WITH_PREFIX)/$(ISS_SCRIPT)

zip:
	rm -f $(ZIPFILE)
	rm -rf $(INSTALLDIR)
	mkdir -p $(INSTALLDIR)
	make install DESTDIR=$(INSTALLDIR)
	cp -f $(top_srcdir)/README $(INSTALLDIR_WITH_PREFIX)/.
	cp -f $(top_srcdir)/COPYING $(INSTALLDIR_WITH_PREFIX)/.
	cd $(INSTALLDIR)/$(prefix) && rm -rf $(ZIP_EXCLUDED) && \
	zip -r $(ZIPFILE) *

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
